import{_ as c,M as t,p as n,q as o,N as a,R as e,t as d,a1 as r}from"./framework-c8e009f3.js";const l={},u=e("h1",{id:"设备信息-device",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#设备信息-device","aria-hidden":"true"},"#"),d(" 设备信息-device")],-1),h=r('<p>device 模块提供了与设备有关的信息与操作，例如获取设备宽高，内存使用率，IMEI，调整设备亮度、音量等。</p><p>此模块的部分函数，例如调整音量，需要&quot;修改系统设置&quot;的权限。如果没有该权限，会抛出<code>SecurityException</code>并跳转到权限设置界面。</p><h2 id="device-width" tabindex="-1"><a class="header-anchor" href="#device-width" aria-hidden="true">#</a> device.width</h2><ul><li><code>return</code> {number}</li></ul><p>设备屏幕分辨率宽度。例如 1080。</p><h2 id="device-height" tabindex="-1"><a class="header-anchor" href="#device-height" aria-hidden="true">#</a> device.height</h2><ul><li><code>return</code> {number}</li></ul><p>设备屏幕分辨率高度。例如 1920。</p><h2 id="device-buildid" tabindex="-1"><a class="header-anchor" href="#device-buildid" aria-hidden="true">#</a> device.buildId</h2><ul><li><code>return</code> {string}</li></ul><p>修订版本号，或者诸如&quot;M4-rc20&quot;的标识。</p><h2 id="device-broad" tabindex="-1"><a class="header-anchor" href="#device-broad" aria-hidden="true">#</a> device.broad</h2><ul><li><code>return</code> {string}</li></ul><p>The name of the underlying board, like &quot;goldfish&quot;.</p><p>设备的主板(?)型号。</p><h2 id="device-brand" tabindex="-1"><a class="header-anchor" href="#device-brand" aria-hidden="true">#</a> device.brand</h2><ul><li><code>return</code> {string}</li></ul><p>The consumer-visible brand with which the product/hardware will be associated, if any.</p><p>与产品或硬件相关的厂商品牌，如&quot;Xiaomi&quot;, &quot;Huawei&quot;等。</p><h2 id="device-device" tabindex="-1"><a class="header-anchor" href="#device-device" aria-hidden="true">#</a> device.device</h2><ul><li><code>return</code> {string}</li></ul><p>The name of the industrial design.</p><p>设备在工业设计中的名称。</p><h2 id="device-model" tabindex="-1"><a class="header-anchor" href="#device-model" aria-hidden="true">#</a> device.model</h2><ul><li><code>return</code> {string}</li></ul><p>The end-user-visible name for the end product.</p><p>设备型号。</p><h2 id="device-product" tabindex="-1"><a class="header-anchor" href="#device-product" aria-hidden="true">#</a> device.product</h2><ul><li><code>return</code> {string}</li></ul><p>The name of the overall product.</p><p>整个产品的名称。</p><h2 id="device-bootloader" tabindex="-1"><a class="header-anchor" href="#device-bootloader" aria-hidden="true">#</a> device.bootloader</h2><ul><li><code>return</code> {string}</li></ul><p>The system bootloader version number.</p><p>设备 Bootloader 的版本。</p><h2 id="device-hardware" tabindex="-1"><a class="header-anchor" href="#device-hardware" aria-hidden="true">#</a> device.hardware</h2><ul><li><code>return</code> {string}</li></ul><p>The name of the hardware (from the kernel command line or /proc).</p><p>设备的硬件名称(来自内核命令行或者/proc)。</p><h2 id="device-fingerprint" tabindex="-1"><a class="header-anchor" href="#device-fingerprint" aria-hidden="true">#</a> device.fingerprint</h2><ul><li><code>return</code> {string}</li></ul><p>A string that uniquely identifies this build. Do not attempt to parse this value.</p><p>构建(build)的唯一标识码。</p><h2 id="device-serial" tabindex="-1"><a class="header-anchor" href="#device-serial" aria-hidden="true">#</a> device.serial</h2><ul><li><code>return</code> {string}</li></ul><p>A hardware serial number, if available. Alphanumeric only, case-insensitive.</p><p>硬件序列号。</p><h2 id="device-sdkint" tabindex="-1"><a class="header-anchor" href="#device-sdkint" aria-hidden="true">#</a> device.sdkInt</h2><ul><li><code>return</code> {number}</li></ul><p>The user-visible SDK version of the framework; its possible values are defined in Build.VERSION_CODES.</p><p>安卓系统 API 版本。例如安卓 4.4 的 sdkInt 为 19。</p><h2 id="device-incremental" tabindex="-1"><a class="header-anchor" href="#device-incremental" aria-hidden="true">#</a> device.incremental</h2><ul><li><code>return</code> {string}</li></ul><p>The internal value used by the underlying source control to represent this build. E.g., a perforce changelist number or a git hash.</p><h2 id="device-release" tabindex="-1"><a class="header-anchor" href="#device-release" aria-hidden="true">#</a> device.release</h2><ul><li><code>return</code> {string}</li></ul><p>The user-visible version string. E.g., &quot;1.0&quot; or &quot;3.4b5&quot;.</p><p>Android 系统版本号。例如&quot;5.0&quot;, &quot;7.1.1&quot;。</p><h2 id="device-baseos" tabindex="-1"><a class="header-anchor" href="#device-baseos" aria-hidden="true">#</a> device.baseOS</h2><ul><li><code>return</code> {string}</li></ul><p>The base OS build the product is based on.</p><h2 id="device-securitypatch" tabindex="-1"><a class="header-anchor" href="#device-securitypatch" aria-hidden="true">#</a> device.securityPatch</h2><ul><li><code>return</code> {string}</li></ul><p>The user-visible security patch level.</p><p>安全补丁程序级别。</p><h2 id="device-codename" tabindex="-1"><a class="header-anchor" href="#device-codename" aria-hidden="true">#</a> device.codename</h2><ul><li><code>return</code> {string}</li></ul><p>The current development codename, or the string &quot;REL&quot; if this is a release build.</p><p>开发代号，例如发行版是&quot;REL&quot;。</p><h2 id="device-getimei" tabindex="-1"><a class="header-anchor" href="#device-getimei" aria-hidden="true">#</a> device.getIMEI()</h2><ul><li><code>return</code> {string}</li></ul><p>返回设备的 IMEI.</p><h2 id="device-getandroidid" tabindex="-1"><a class="header-anchor" href="#device-getandroidid" aria-hidden="true">#</a> device.getAndroidId()</h2><ul><li><code>return</code> {string}</li></ul><p>返回设备的 Android ID。</p><p>Android ID 为一个用 16 进制字符串表示的 64 位整数，在设备第一次使用时随机生成，之后不会更改，除非恢复出厂设置。</p><h2 id="device-getmacaddress" tabindex="-1"><a class="header-anchor" href="#device-getmacaddress" aria-hidden="true">#</a> device.getMacAddress()</h2>',77),s=r(`<ul><li><code>return</code> {string}</li></ul><p>返回设备的 Mac 地址。该函数需要在有 WLAN 连接的情况下才能获取，否则会返回 null。</p><p><strong>可能的后续修改</strong>：未来可能增加有 root 权限的情况下通过 root 权限获取，从而在没有 WLAN 连接的情况下也能返回正确的 Mac 地址，因此请勿使用此函数判断 WLAN 连接。</p><h2 id="device-getbrightness" tabindex="-1"><a class="header-anchor" href="#device-getbrightness" aria-hidden="true">#</a> device.getBrightness()</h2><ul><li><code>return</code> {number}</li></ul><p>返回当前的(手动)亮度。范围为 0~255。</p><h2 id="device-getbrightnessmode" tabindex="-1"><a class="header-anchor" href="#device-getbrightnessmode" aria-hidden="true">#</a> device.getBrightnessMode()</h2><ul><li><code>return</code> {number}</li></ul><p>返回当前亮度模式，0 为手动亮度，1 为自动亮度。</p><h2 id="device-setbrightness-b" tabindex="-1"><a class="header-anchor" href="#device-setbrightness-b" aria-hidden="true">#</a> device.setBrightness(b)</h2><ul><li><code>b</code> {number} 亮度，范围 0~255</li></ul><p>设置当前手动亮度。如果当前是自动亮度模式，该函数不会影响屏幕的亮度。</p><p>此函数需要&quot;修改系统设置&quot;的权限。如果没有该权限，会抛出 SecurityException 并跳转到权限设置界面。</p><h2 id="device-setbrightnessmode-mode" tabindex="-1"><a class="header-anchor" href="#device-setbrightnessmode-mode" aria-hidden="true">#</a> device.setBrightnessMode(mode)</h2><ul><li><code>mode</code> {number} 亮度模式，0 为手动亮度，1 为自动亮度</li></ul><p>设置当前亮度模式。</p><p>此函数需要&quot;修改系统设置&quot;的权限。如果没有该权限，会抛出 SecurityException 并跳转到权限设置界面。</p><h2 id="device-getmusicvolume" tabindex="-1"><a class="header-anchor" href="#device-getmusicvolume" aria-hidden="true">#</a> device.getMusicVolume()</h2><ul><li><code>return</code> {number} 整数值</li></ul><p>返回当前媒体音量。</p><h2 id="device-getnotificationvolume" tabindex="-1"><a class="header-anchor" href="#device-getnotificationvolume" aria-hidden="true">#</a> device.getNotificationVolume()</h2><ul><li><code>return</code> {number} 整数值</li></ul><p>返回当前通知音量。</p><h2 id="device-getalarmvolume" tabindex="-1"><a class="header-anchor" href="#device-getalarmvolume" aria-hidden="true">#</a> device.getAlarmVolume()</h2><ul><li><code>return</code> {number} 整数值</li></ul><p>返回当前闹钟音量。</p><h2 id="device-getmusicmaxvolume" tabindex="-1"><a class="header-anchor" href="#device-getmusicmaxvolume" aria-hidden="true">#</a> device.getMusicMaxVolume()</h2><ul><li><code>return</code> {number} 整数值</li></ul><p>返回媒体音量的最大值。</p><h2 id="device-getnotificationmaxvolume" tabindex="-1"><a class="header-anchor" href="#device-getnotificationmaxvolume" aria-hidden="true">#</a> device.getNotificationMaxVolume()</h2><ul><li><code>return</code> {number} 整数值</li></ul><p>返回通知音量的最大值。</p><h2 id="device-getalarmmaxvolume" tabindex="-1"><a class="header-anchor" href="#device-getalarmmaxvolume" aria-hidden="true">#</a> device.getAlarmMaxVolume()</h2><ul><li><code>return</code> {number} 整数值</li></ul><p>返回闹钟音量的最大值。</p><h2 id="device-setmusicvolume-volume" tabindex="-1"><a class="header-anchor" href="#device-setmusicvolume-volume" aria-hidden="true">#</a> device.setMusicVolume(volume)</h2><ul><li><code>volume</code> {number} 音量</li></ul><p>设置当前媒体音量。</p><p>此函数需要&quot;修改系统设置&quot;的权限。如果没有该权限，会抛出 SecurityException 并跳转到权限设置界面。</p><h2 id="device-setnotificationvolume-volume" tabindex="-1"><a class="header-anchor" href="#device-setnotificationvolume-volume" aria-hidden="true">#</a> device.setNotificationVolume(volume)</h2><ul><li><code>volume</code> {number} 音量</li></ul><p>设置当前通知音量。</p><p>此函数需要&quot;修改系统设置&quot;的权限。如果没有该权限，会抛出 SecurityException 并跳转到权限设置界面。</p><h2 id="device-setalarmvolume-volume" tabindex="-1"><a class="header-anchor" href="#device-setalarmvolume-volume" aria-hidden="true">#</a> device.setAlarmVolume(volume)</h2><ul><li><code>volume</code> {number} 音量</li></ul><p>设置当前闹钟音量。</p><p>此函数需要&quot;修改系统设置&quot;的权限。如果没有该权限，会抛出 SecurityException 并跳转到权限设置界面。</p><h2 id="device-getbattery" tabindex="-1"><a class="header-anchor" href="#device-getbattery" aria-hidden="true">#</a> device.getBattery()</h2><ul><li><code>return</code> {number} 0.0~100.0 的浮点数</li></ul><p>返回当前电量百分比。</p><h2 id="device-ischarging" tabindex="-1"><a class="header-anchor" href="#device-ischarging" aria-hidden="true">#</a> device.isCharging()</h2><ul><li><code>return</code> {boolean}</li></ul><p>返回设备是否正在充电。</p><h2 id="device-gettotalmem" tabindex="-1"><a class="header-anchor" href="#device-gettotalmem" aria-hidden="true">#</a> device.getTotalMem()</h2><ul><li><code>return</code> {number}</li></ul><p>返回设备内存总量，单位字节(B)。1MB = 1024 * 1024B。</p><h2 id="device-getavailmem" tabindex="-1"><a class="header-anchor" href="#device-getavailmem" aria-hidden="true">#</a> device.getAvailMem()</h2><ul><li><code>return</code> {number}</li></ul><p>返回设备当前可用的内存，单位字节(B)。</p><h2 id="device-isscreenon" tabindex="-1"><a class="header-anchor" href="#device-isscreenon" aria-hidden="true">#</a> device.isScreenOn()</h2><ul><li><code>return</code> {boolean}</li></ul><p>返回设备屏幕是否是亮着的。如果屏幕亮着，返回<code>true</code>; 否则返回<code>false</code>。</p><p>需要注意的是，类似于 vivo xplay 系列的息屏时钟不属于&quot;屏幕亮着&quot;的情况，虽然屏幕确实亮着但只能显示时钟而且不可交互，此时<code>isScreenOn()</code>也会返回<code>false</code>。</p><h2 id="device-wakeup" tabindex="-1"><a class="header-anchor" href="#device-wakeup" aria-hidden="true">#</a> device.wakeUp()</h2><p>唤醒设备。包括唤醒设备 CPU、屏幕等。可以用来点亮屏幕。</p><h2 id="device-wakeupifneeded" tabindex="-1"><a class="header-anchor" href="#device-wakeupifneeded" aria-hidden="true">#</a> device.wakeUpIfNeeded()</h2><p>如果屏幕没有点亮，则唤醒设备。</p><h2 id="device-keepscreenon-timeout" tabindex="-1"><a class="header-anchor" href="#device-keepscreenon-timeout" aria-hidden="true">#</a> device.keepScreenOn([timeout])</h2><ul><li><code>timeout</code> {number} 屏幕保持常亮的时间, 单位毫秒。如果不加此参数，则一直保持屏幕常亮。</li></ul><p>保持屏幕常亮。</p><p>此函数无法阻止用户使用锁屏键等正常关闭屏幕，只能使得设备在无人操作的情况下保持屏幕常亮；同时，如果此函数调用时屏幕没有点亮，则会唤醒屏幕。</p><p>在某些设备上，如果不加参数 timeout，只能在 Auto.js 的界面保持屏幕常亮，在其他界面会自动失效，这是因为设备的省电策略造成的。因此，建议使用比较长的时长来代替&quot;一直保持屏幕常亮&quot;的功能，例如<code>device.keepScreenOn(3600 * 1000)</code>。</p><p>可以使用<code>device.cancelKeepingAwake()</code>来取消屏幕常亮。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//一直保持屏幕常亮</span>
device<span class="token punctuation">.</span><span class="token function">keepScreenOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="device-keepscreendim-timeout" tabindex="-1"><a class="header-anchor" href="#device-keepscreendim-timeout" aria-hidden="true">#</a> device.keepScreenDim([timeout])</h2><ul><li><code>timeout</code> {number} 屏幕保持常亮的时间, 单位毫秒。如果不加此参数，则一直保持屏幕常亮。</li></ul><p>保持屏幕常亮，但允许屏幕变暗来节省电量。此函数可以用于定时脚本唤醒屏幕操作，不需要用户观看屏幕，可以让屏幕变暗来节省电量。</p><p>此函数无法阻止用户使用锁屏键等正常关闭屏幕，只能使得设备在无人操作的情况下保持屏幕常亮；同时，如果此函数调用时屏幕没有点亮，则会唤醒屏幕。</p><p>可以使用<code>device.cancelKeepingAwake()</code>来取消屏幕常亮。</p><h2 id="device-cancelkeepingawake" tabindex="-1"><a class="header-anchor" href="#device-cancelkeepingawake" aria-hidden="true">#</a> device.cancelKeepingAwake()</h2><p>取消设备保持唤醒状态。用于取消<code>device.keepScreenOn()</code>, <code>device.keepScreenDim()</code>等函数设置的屏幕常亮。</p><h2 id="device-vibrate-millis" tabindex="-1"><a class="header-anchor" href="#device-vibrate-millis" aria-hidden="true">#</a> device.vibrate(millis)</h2><ul><li><code>millis</code> {number} 震动时间，单位毫秒</li></ul><p>使设备震动一段时间。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//震动两秒</span>
device<span class="token punctuation">.</span><span class="token function">vibrate</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="device-cancelvibration" tabindex="-1"><a class="header-anchor" href="#device-cancelvibration" aria-hidden="true">#</a> device.cancelVibration()</h2>`,86),p=e("p",null,"如果设备处于震动状态，则取消震动。",-1),v=e("h2",{id:"device-checkdevicehasnavigationbar",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#device-checkdevicehasnavigationbar","aria-hidden":"true"},"#"),d(" device.checkDeviceHasNavigationBar()")],-1),m=e("ul",null,[e("li",null,[e("code",null,"return"),d(" {boolean}")])],-1),b=e("p",null,"设备是否存储虚拟导航栏",-1),g=e("h2",{id:"device-getvirtualbarheigh",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#device-getvirtualbarheigh","aria-hidden":"true"},"#"),d(" device.getVirtualBarHeigh()")],-1),f=e("ul",null,[e("li",null,[e("code",null,"return"),d(" {number}")])],-1),x=e("p",null,"返回导航栏的高度 设备虚拟导航栏的高度,可以用设备高度 减去 这个高度，再按一定比例 点击底部附件的坐标",-1);function k(q,_){const i=t("Badge");return n(),o("div",null,[u,a(i,{type:"tip",text:"稳定",vertical:"middle"}),h,a(i,{type:"warning",text:"实验",vertical:"middle"}),s,a(i,{type:"tip",text:"v4.2.7+",vertical:"middle"}),p,v,a(i,{type:"tip",text:"v4.2.7+",vertical:"middle"}),m,b,g,a(i,{type:"tip",text:"v4.2.7+",vertical:"middle"}),f,x])}const y=c(l,[["render",k],["__file","device.html.vue"]]);export{y as default};

import{_ as n,p as a,q as s,a1 as t}from"./framework-5866ffd3.js";const e={},o=t(`<h1 id="floaty" tabindex="-1"><a class="header-anchor" href="#floaty" aria-hidden="true">#</a> Floaty</h1><p>floaty 模块提供了悬浮窗的相关函数，可以在屏幕上显示自定义悬浮窗，控制悬浮窗大小、位置等。</p><p>悬浮窗在脚本停止运行时会自动关闭，因此，要保持悬浮窗不被关闭，可以用一个空的 <code>setInterval</code> 来实现，例如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="floaty-checkpermission" tabindex="-1"><a class="header-anchor" href="#floaty-checkpermission" aria-hidden="true">#</a> floaty.checkPermission()</h2><p><strong>[4.2.17 新增]</strong></p><ul><li>返回 {boolean}</li></ul><p>返回当前应用是否有悬浮窗权限。（不会触发请求权限操作）</p><h2 id="floaty-requestpermission" tabindex="-1"><a class="header-anchor" href="#floaty-requestpermission" aria-hidden="true">#</a> floaty.requestPermission()</h2><p><strong>[4.2.17 新增]</strong></p><p>跳转到系统的悬浮窗权限请求界面。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>floaty<span class="token punctuation">.</span><span class="token function">checkPermission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 没有悬浮窗权限，提示用户并跳转请求</span>
  <span class="token function">toast</span><span class="token punctuation">(</span>
    <span class="token string">&quot;本脚本需要悬浮窗权限来显示悬浮窗，请在随后的界面中允许并重新运行本脚本。&quot;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  floaty<span class="token punctuation">.</span><span class="token function">requestPermission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token function">toastLog</span><span class="token punctuation">(</span><span class="token string">&quot;已有悬浮窗权限&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="floaty-window-layout" tabindex="-1"><a class="header-anchor" href="#floaty-window-layout" aria-hidden="true">#</a> floaty.window(layout)</h2><ul><li><code>layout</code> {xml} | {View} 悬浮窗界面的 XML 或者 View</li></ul><p>指定悬浮窗的布局，创建并<strong>显示</strong>一个悬浮窗，返回一个<a href="#floatywindow">FloatyWindow</a>对象。</p><p>该悬浮窗自带关闭、调整大小、调整位置按键，可根据需要调用<code>setAdjustEnabled()</code>函数来显示或隐藏。</p><p>其中 <code>layout</code> 参数可以是 xml 布局或者一个 View，更多信息参见 ui 模块的说明。</p><p>例子：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> w <span class="token operator">=</span> floaty<span class="token punctuation">.</span><span class="token function">window</span><span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>frame gravity<span class="token operator">=</span><span class="token string">&quot;center&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>text id<span class="token operator">=</span><span class="token string">&quot;text&quot;</span><span class="token operator">&gt;</span>悬浮文字<span class="token operator">&lt;</span><span class="token operator">/</span>text<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>frame<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  w<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这段代码运行后将会在屏幕上显示悬浮文字，并在两秒后消失。</p><p>另外，因为脚本运行的线程不是 UI 线程，而所有对控件的修改操作需要在 UI 线程执行，此时需要用<code>ui.run</code>，例如:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>ui<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  w<span class="token punctuation">.</span>text<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;文本&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>有关返回的<code>FloatyWindow</code>对象的说明，参见下面的<code>FloatyWindow</code>章节。</p><h2 id="floaty-rawwindow-layout" tabindex="-1"><a class="header-anchor" href="#floaty-rawwindow-layout" aria-hidden="true">#</a> floaty.rawWindow(layout)</h2><ul><li><code>layout</code> {xml} | {View} 悬浮窗界面的 XML 或者 View</li></ul><p>指定悬浮窗的布局，创建并<strong>显示</strong>一个原始悬浮窗，返回一个<a href="#floatyrawwindow">FloatyRawWindow</a>对象。</p><p>与<code>floaty.window()</code>函数不同的是，该悬浮窗不会增加任何额外设施（例如调整大小、位置按钮），您可以根据自己需要编写任何布局。</p><p>而且，该悬浮窗支持完全全屏，可以覆盖状态栏，因此可以做护眼模式之类的应用。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> w <span class="token operator">=</span> floaty<span class="token punctuation">.</span><span class="token function">rawWindow</span><span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>frame gravity<span class="token operator">=</span><span class="token string">&quot;center&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>text id<span class="token operator">=</span><span class="token string">&quot;text&quot;</span><span class="token operator">&gt;</span>悬浮文字<span class="token operator">&lt;</span><span class="token operator">/</span>text<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>frame<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

w<span class="token punctuation">.</span><span class="token function">setPosition</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  w<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这段代码运行后将会在屏幕上显示悬浮文字，并在两秒后消失。</p><p>有关返回的<code>FloatyRawWindow</code>对象的说明，参见下面的<code>FloatyRawWindow</code>章节。</p><h2 id="floaty-closeall" tabindex="-1"><a class="header-anchor" href="#floaty-closeall" aria-hidden="true">#</a> floaty.closeAll()</h2><p>关闭所有本脚本的悬浮窗。</p><h1 id="floatywindow" tabindex="-1"><a class="header-anchor" href="#floatywindow" aria-hidden="true">#</a> FloatyWindow</h1><p>悬浮窗对象，可通过<code>FloatyWindow.{id}</code>获取悬浮窗界面上的元素。例如, 悬浮窗 window 上一个控件的 id 为 aaa, 那么<code>window.aaa</code>即可获取到该控件，类似于 ui。</p><h2 id="window-setadjustenabled-enabled" tabindex="-1"><a class="header-anchor" href="#window-setadjustenabled-enabled" aria-hidden="true">#</a> window.setAdjustEnabled(enabled)</h2><ul><li><code>enabled</code> {boolean} 是否启用悬浮窗调整(大小、位置)</li></ul><p>如果 enabled 为 true，则在悬浮窗左上角、右上角显示可供位置、大小调整的标示，就像控制台一样； 如果 enabled 为 false，则隐藏上述标示。</p><h2 id="window-setposition-x-y" tabindex="-1"><a class="header-anchor" href="#window-setposition-x-y" aria-hidden="true">#</a> window.setPosition(x, y)</h2><ul><li><code>x</code> {number} x</li><li><code>y</code> {number} y</li></ul><p>设置悬浮窗位置。</p><h2 id="window-getx" tabindex="-1"><a class="header-anchor" href="#window-getx" aria-hidden="true">#</a> window.getX()</h2><p>返回悬浮窗位置的 X 坐标。</p><h2 id="window-gety" tabindex="-1"><a class="header-anchor" href="#window-gety" aria-hidden="true">#</a> window.getY()</h2><p>返回悬浮窗位置的 Y 坐标。</p><h2 id="window-setsize-width-height" tabindex="-1"><a class="header-anchor" href="#window-setsize-width-height" aria-hidden="true">#</a> window.setSize(width, height)</h2><ul><li><code>width</code> {number} 宽度</li><li><code>height</code> {number} 高度</li></ul><p>设置悬浮窗宽高。</p><h2 id="window-getwidth" tabindex="-1"><a class="header-anchor" href="#window-getwidth" aria-hidden="true">#</a> window.getWidth()</h2><p>返回悬浮窗宽度。</p><h2 id="window-getheight" tabindex="-1"><a class="header-anchor" href="#window-getheight" aria-hidden="true">#</a> window.getHeight()</h2><p>返回悬浮窗高度。</p><h2 id="window-close" tabindex="-1"><a class="header-anchor" href="#window-close" aria-hidden="true">#</a> window.close()</h2><p>关闭悬浮窗。如果悬浮窗已经是关闭状态，则此函数将不执行任何操作。</p><p>被关闭后的悬浮窗不能再显示。</p><h2 id="window-exitonclose" tabindex="-1"><a class="header-anchor" href="#window-exitonclose" aria-hidden="true">#</a> window.exitOnClose()</h2><p>使悬浮窗被关闭时自动结束脚本运行。</p><h1 id="floatyrawwindow" tabindex="-1"><a class="header-anchor" href="#floatyrawwindow" aria-hidden="true">#</a> FloatyRawWindow</h1><p>原始悬浮窗对象，可通过<code>window.{id}</code>获取悬浮窗界面上的元素。例如, 悬浮窗 window 上一个控件的 id 为 aaa, 那么<code>window.aaa</code>即可获取到该控件，类似于 ui。</p><h2 id="window-settouchable-touchable" tabindex="-1"><a class="header-anchor" href="#window-settouchable-touchable" aria-hidden="true">#</a> window.setTouchable(touchable)</h2><ul><li><code>touchable</code> {Boolean} 是否可触摸</li></ul><p>设置悬浮窗是否可触摸，如果为 true, 则悬浮窗将接收到触摸、点击等事件并且无法继续传递到悬浮窗下面；如果为 false, 悬浮窗上的触摸、点击等事件将被直接传递到悬浮窗下面。处于安全考虑，被悬浮窗接收的触摸事情无法再继续传递到下层。</p><p>可以用此特性来制作护眼模式脚本。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> w <span class="token operator">=</span> floaty<span class="token punctuation">.</span><span class="token function">rawWindow</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>frame gravity<span class="token operator">=</span><span class="token string">&quot;center&quot;</span> bg<span class="token operator">=</span><span class="token string">&quot;#44ffcc00&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

w<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
w<span class="token punctuation">.</span><span class="token function">setTouchable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  w<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="window-setposition-x-y-1" tabindex="-1"><a class="header-anchor" href="#window-setposition-x-y-1" aria-hidden="true">#</a> window.setPosition(x, y)</h2><ul><li><code>x</code> {number} x</li><li><code>y</code> {number} y</li></ul><p>设置悬浮窗位置。</p><h2 id="window-getx-1" tabindex="-1"><a class="header-anchor" href="#window-getx-1" aria-hidden="true">#</a> window.getX()</h2><p>返回悬浮窗位置的 X 坐标。</p><h2 id="window-gety-1" tabindex="-1"><a class="header-anchor" href="#window-gety-1" aria-hidden="true">#</a> window.getY()</h2><p>返回悬浮窗位置的 Y 坐标。</p><h2 id="window-setsize-width-height-1" tabindex="-1"><a class="header-anchor" href="#window-setsize-width-height-1" aria-hidden="true">#</a> window.setSize(width, height)</h2><ul><li><code>width</code> {number} 宽度</li><li><code>height</code> {number} 高度</li></ul><p>设置悬浮窗宽高。</p><p>如果设置为-1，则为占满全屏；设置为-2 则为根据悬浮窗内容大小而定。例如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> w <span class="token operator">=</span> floaty<span class="token punctuation">.</span><span class="token function">rawWindow</span><span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>frame gravity<span class="token operator">=</span><span class="token string">&quot;center&quot;</span> bg<span class="token operator">=</span><span class="token string">&quot;#77ff0000&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>text id<span class="token operator">=</span><span class="token string">&quot;text&quot;</span><span class="token operator">&gt;</span>悬浮文字<span class="token operator">&lt;</span><span class="token operator">/</span>text<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>frame<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

w<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  w<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="window-getwidht" tabindex="-1"><a class="header-anchor" href="#window-getwidht" aria-hidden="true">#</a> window.getWidht()</h2><p>返回悬浮窗宽度。</p><h2 id="window-getheight-1" tabindex="-1"><a class="header-anchor" href="#window-getheight-1" aria-hidden="true">#</a> window.getHeight()</h2><p>返回悬浮窗高度。</p><h2 id="window-close-1" tabindex="-1"><a class="header-anchor" href="#window-close-1" aria-hidden="true">#</a> window.close()</h2><p>关闭悬浮窗。如果悬浮窗已经是关闭状态，则此函数将不执行任何操作。</p><p>被关闭后的悬浮窗不能再显示。</p><h2 id="window-exitonclose-1" tabindex="-1"><a class="header-anchor" href="#window-exitonclose-1" aria-hidden="true">#</a> window.exitOnClose()</h2><p>使悬浮窗被关闭时自动结束脚本运行。</p>`,85),p=[o];function i(c,l){return a(),s("div",null,p)}const d=n(e,[["render",i],["__file","floaty.html.vue"]]);export{d as default};

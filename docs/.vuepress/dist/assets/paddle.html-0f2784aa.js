import{_ as a,M as o,p as r,q as c,R as e,t as d,N as i,a1 as t}from"./framework-5866ffd3.js";const u={},m=t('<h1 id="paddle" tabindex="-1"><a class="header-anchor" href="#paddle" aria-hidden="true">#</a> paddle</h1><blockquote><p>Paddle OCR 在 5.6.1 版本加入</p></blockquote><h2 id="paddle-ocr-image-useslim" tabindex="-1"><a class="header-anchor" href="#paddle-ocr-image-useslim" aria-hidden="true">#</a> paddle.ocr(image,useSlim)</h2><p>使用指定的 OCR 模型来执行 OCR。</p><ul><li><code>image</code> {Image} 要执行 OCR 的图像。</li><li><code>useSlim</code> {Boolean} 加载的模型,可选值: <ul><li><code>true</code> ocr_v2_for_cpu(slim) :快速模型</li><li><code>false</code> ocr_v2_for_cpu : 精准模型</li></ul></li><li><code>return</code> {Array} 识别结果数组,值为 <a href="#ocrresult">OcrResult</a></li></ul><h2 id="paddle-ocr-image-cputhreadnum-useslim" tabindex="-1"><a class="header-anchor" href="#paddle-ocr-image-cputhreadnum-useslim" aria-hidden="true">#</a> paddle.ocr(image,[cpuThreadNum,useSlim])</h2><p>使用指定的 CPU 核心数和 OCR 模型来执行 OCR。</p><ul><li><code>image</code> {Image} 要执行 OCR 的图像。</li><li><code>cpuThreadNum</code> {Number} 用于执行 OCR 的 CPU 核心数。默认值:系统的 CPU 核心数</li><li><code>useSlim</code> {Boolean} 加载的模型,可选值: <ul><li><code>true</code> ocr_v2_for_cpu(slim) :快速模型,默认</li><li><code>false</code> ocr_v2_for_cpu : 精准模型</li></ul></li><li><code>return</code> {Array} 识别结果数组,值为 <a href="#ocrresult">OcrResult</a></li></ul><h2 id="paddle-ocr-image-cputhreadnum-mymodelpath" tabindex="-1"><a class="header-anchor" href="#paddle-ocr-image-cputhreadnum-mymodelpath" aria-hidden="true">#</a> paddle.ocr(image,cpuThreadNum,myModelPath)</h2><p>使用指定的 CPU 核心数和自定义 OCR 模型来执行 OCR。</p><ul><li><code>image</code> {Image} 要执行 OCR 的图像。</li><li><code>cpuThreadNum</code> {Number} 用于执行 OCR 的 CPU 核心数。</li><li><code>myModelPath</code> {String} 自定义 OCR 模型的绝对路径。</li><li><code>return</code> {Array} 识别结果数组,值为 <a href="#ocrresult">OcrResult</a></li></ul><h2 id="paddle-ocr-image-mymodelpath" tabindex="-1"><a class="header-anchor" href="#paddle-ocr-image-mymodelpath" aria-hidden="true">#</a> paddle.ocr(image,myModelPath)</h2><p>使用自定义 OCR 模型来执行 OCR。</p><ul><li><code>image</code> {Image} 要执行 OCR 的图像。</li><li><code>myModelPath</code> {String} 自定义 OCR 模型的绝对路径。</li><li><code>return</code> {Array} 识别结果数组,值为 <a href="#ocrresult">OcrResult</a></li></ul><h2 id="paddle-ocrtext-image-useslim" tabindex="-1"><a class="header-anchor" href="#paddle-ocrtext-image-useslim" aria-hidden="true">#</a> paddle.ocrText(image,useSlim)</h2><p>使用指定的 OCR 模型来执行 OCR。</p><ul><li><code>image</code> {Image} 要执行 OCR 的图像。</li><li><code>useSlim</code> {Boolean} 加载的模型,可选值: <ul><li><code>true</code> ocr_v2_for_cpu(slim) :快速模型</li><li><code>false</code> ocr_v2_for_cpu : 精准模型</li></ul></li><li><code>return</code> {String} 识别到的文本字符串。</li></ul><h2 id="paddle-ocrtext-image-cputhreadnum-useslim" tabindex="-1"><a class="header-anchor" href="#paddle-ocrtext-image-cputhreadnum-useslim" aria-hidden="true">#</a> paddle.ocrText(image,[cpuThreadNum,useSlim])</h2><p>使用指定的 CPU 核心数和 OCR 模型来执行 OCR。</p><ul><li><code>image</code> {Image} 要执行 OCR 的图像。</li><li><code>cpuThreadNum</code> {Number} 用于执行 OCR 的 CPU 核心数。默认值:系统的 CPU 核心数</li><li><code>useSlim</code> {Boolean} 加载的模型,可选值: <ul><li><code>true</code> ocr_v2_for_cpu(slim) :快速模型,默认</li><li><code>false</code> ocr_v2_for_cpu : 精准模型</li></ul></li><li><code>return</code> {String} 识别到的文本字符串。</li></ul><h2 id="paddle-ocrtext-image-cputhreadnum-mymodelpath" tabindex="-1"><a class="header-anchor" href="#paddle-ocrtext-image-cputhreadnum-mymodelpath" aria-hidden="true">#</a> paddle.ocrText(image,cpuThreadNum,myModelPath)</h2><p>使用指定的 CPU 核心数和自定义 OCR 模型来执行 OCR。</p><ul><li><code>image</code> {Image} 要执行 OCR 的图像。</li><li><code>cpuThreadNum</code> {Number} 用于执行 OCR 的 CPU 核心数。</li><li><code>myModelPath</code> {String} 自定义 OCR 模型的绝对路径。</li><li><code>return</code> {String} 识别到的文本字符串。</li></ul><h2 id="paddle-ocrtext-image-mymodelpath" tabindex="-1"><a class="header-anchor" href="#paddle-ocrtext-image-mymodelpath" aria-hidden="true">#</a> paddle.ocrText(image,myModelPath)</h2><p>使用自定义 OCR 模型来执行 OCR。</p><ul><li><code>image</code> {Image} 要执行 OCR 的图像。</li><li><code>myModelPath</code> {String} 自定义 OCR 模型的绝对路径。</li><li><code>return</code> {String} 识别到的文本字符串。</li></ul><h3 id="ocrresult" tabindex="-1"><a class="header-anchor" href="#ocrresult" aria-hidden="true">#</a> OcrResult</h3><p><code>OcrResult</code> 是一个表示 OCR 结果的类。它包含以下字段：</p>',28),n=e("li",null,[e("code",null,"confidence"),d(" {Number} 识别的置信度。")],-1),h=e("li",null,[e("code",null,"preprocessTime"),d(" {Number} 预处理时间。")],-1),s=e("li",null,[e("code",null,"inferenceTime"),d(" {Number} 推理时间。")],-1),p=e("li",null,[e("code",null,"text"),d(" {String} 识别出的文本。")],-1),g=e("code",null,"bounds",-1),_={href:"https://developer.android.google.cn/reference/kotlin/android/graphics/Rect?hl=en",target:"_blank",rel:"noopener noreferrer"};function C(R,O){const l=o("ExternalLinkIcon");return r(),c("div",null,[m,e("ul",null,[n,h,s,p,e("li",null,[g,d(" {"),e("a",_,[d("Rect"),i(l)]),d("} 文本在图像中的位置")])])])}const x=a(u,[["render",C],["__file","paddle.html.vue"]]);export{x as default};
